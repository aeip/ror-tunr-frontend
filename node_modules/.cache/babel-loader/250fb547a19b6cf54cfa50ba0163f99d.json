{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/marcupio/Desktop/seir/unit4/rails-mini-project/tunr-client/src/components/Playlists.js\";\nimport React from 'react';\nimport { Song } from './Song';\nimport { New } from './New';\nimport { NewPlaylist } from './NewPlaylist';\nexport const Playlists = props => {\n  let playlists = props.playlists;\n\n  const handleCreatePlaylist = formData => {\n    props.handleCreatePlaylist(formData);\n  };\n\n  const handleDeletePlaylist = playlist => {\n    props.handleDeletePlaylist(playlist);\n  };\n\n  const handleCreate = (formData, playlist) => {\n    props.handleCreate(formData, playlist);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlists\",\n    children: [playlists ? playlists.map(function (playlist, i) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlist-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: playlist.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: playlist.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"song-remove\",\n            onClick: () => handleDeletePlaylist(playlist),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 8\n        }, this), playlist.songs ? playlist.songs.map(function (song) {\n          return /*#__PURE__*/_jsxDEV(Song, {\n            handleDelete: props.handleDelete,\n            song: song,\n            handleFavorites: props.handleFavorites\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Songs yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(New, {\n          playlist: playlist,\n          playlistId: playlist.id,\n          emptySong: props.emptySong,\n          handleCreate: handleCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NewPlaylist, {\n      handleCreatePlaylist: handleCreatePlaylist,\n      emptyPlaylist: props.emptyPlaylist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n_c = Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"sources":["/Users/marcupio/Desktop/seir/unit4/rails-mini-project/tunr-client/src/components/Playlists.js"],"names":["React","Song","New","NewPlaylist","Playlists","props","playlists","handleCreatePlaylist","formData","handleDeletePlaylist","playlist","handleCreate","map","i","title","description","songs","song","handleDelete","handleFavorites","id","emptySong","emptyPlaylist"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,SAAQC,GAAR,QAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;;AACA,QAAMC,oBAAoB,GAAIC,QAAD,IAAc;AACvCH,IAAAA,KAAK,CAACE,oBAAN,CAA2BC,QAA3B;AACH,GAFD;;AAGA,QAAMC,oBAAoB,GAAIC,QAAD,IAAc;AACvCL,IAAAA,KAAK,CAACI,oBAAN,CAA2BC,QAA3B;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG,CAACH,QAAD,EAAWE,QAAX,KAAwB;AACzCL,IAAAA,KAAK,CAACM,YAAN,CAAmBH,QAAnB,EAA6BE,QAA7B;AAEH,GAHD;;AAIH,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACEJ,SAAS,GACTA,SAAS,CAACM,GAAV,CAAc,UAAUF,QAAV,EAAoBG,CAApB,EAAuB;AACpC,0BACC;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACC;AAAA,sBAAKH,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA,sBAAIJ,QAAQ,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AACC,YAAA,KAAK,EAAC,aADP;AAEC,YAAA,OAAO,EAAE,MAAMN,oBAAoB,CAACC,QAAD,CAFpC;AAAA,mCAGC;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAUEA,QAAQ,CAACM,KAAT,GACAN,QAAQ,CAACM,KAAT,CAAeJ,GAAf,CAAmB,UAAUK,IAAV,EAAgB;AAClC,8BACC,QAAC,IAAD;AACC,YAAA,YAAY,EAAEZ,KAAK,CAACa,YADrB;AAEC,YAAA,IAAI,EAAED,IAFP;AAGC,YAAA,eAAe,EAAEZ,KAAK,CAACc;AAHxB;AAAA;AAAA;AAAA;AAAA,kBADD;AAOA,SARD,CADA,gBAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eAuBC,QAAC,GAAD;AACC,UAAA,QAAQ,EAAET,QADX;AAEC,UAAA,UAAU,EAAEA,QAAQ,CAACU,EAFtB;AAGC,UAAA,SAAS,EAAEf,KAAK,CAACgB,SAHlB;AAIC,UAAA,YAAY,EAAEV;AAJf;AAAA;AAAA;AAAA;AAAA,gBAvBD;AAAA,sBADD;AAgCA,KAjCD,CADS,gBAoCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArCF,eAuCU,QAAC,WAAD;AAAa,MAAA,oBAAoB,EAAEJ,oBAAnC;AAAyD,MAAA,aAAa,EAAEF,KAAK,CAACiB;AAA9E;AAAA;AAAA;AAAA;AAAA,YAvCV;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA2CA,CAvDM;KAAMlB,S","sourcesContent":["import React from 'react';\nimport {Song} from './Song'\nimport {New} from './New'\nimport {NewPlaylist} from './NewPlaylist'\n\nexport const Playlists = (props) => {\n    let playlists = props.playlists;\n    const handleCreatePlaylist = (formData) => {\n        props.handleCreatePlaylist(formData);\n    }\n    const handleDeletePlaylist = (playlist) => {\n        props.handleDeletePlaylist(playlist);\n    }\n    const handleCreate = (formData, playlist) => {\n        props.handleCreate(formData, playlist);\n\n    }\n\treturn (\n\t\t<div className='playlists'>\n\t\t\t{playlists ? (\n\t\t\t\tplaylists.map(function (playlist, i) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='playlist-title'>\n\t\t\t\t\t\t\t\t<h2>{playlist.title}</h2>\n\t\t\t\t\t\t\t\t<p>{playlist.description}</p>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclass='song-remove'\n\t\t\t\t\t\t\t\t\tonClick={() => handleDeletePlaylist(playlist)}>\n\t\t\t\t\t\t\t\t\t<i className='fa fa-trash'></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{playlist.songs ? (\n\t\t\t\t\t\t\t\tplaylist.songs.map(function (song) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Song\n\t\t\t\t\t\t\t\t\t\t\thandleDelete={props.handleDelete}\n\t\t\t\t\t\t\t\t\t\t\tsong={song}\n\t\t\t\t\t\t\t\t\t\t\thandleFavorites={props.handleFavorites}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p>No Songs yet</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<New\n\t\t\t\t\t\t\t\tplaylist={playlist}\n\t\t\t\t\t\t\t\tplaylistId={playlist.id}\n\t\t\t\t\t\t\t\temptySong={props.emptySong}\n\t\t\t\t\t\t\t\thandleCreate={handleCreate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t) : (\n\t\t\t\t<p>No Playlists</p>\n\t\t\t)}\n            <NewPlaylist handleCreatePlaylist={handleCreatePlaylist} emptyPlaylist={props.emptyPlaylist} />\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}