{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marcupio/Desktop/seir/unit4/rails-mini-project/tunr-client/src/components/Playlists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nexport const Playlists = () => {\n  _s();\n\n  const [playlists, setPlaylists] = useState([]);\n  useEffect(() => {\n    const makeAPICall = async () => {\n      try {\n        const res = await fetch('http://localhost:3000/playlists');\n        const json = await res.json();\n        setPlaylists(json);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    makeAPICall();\n  }, []);\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlists\",\n    children: playlists ? playlists.map(function (playlist) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: playlist.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 8\n        }, this), playlist.songs ? playlist.songs.map(function (song) {\n          return /*#__PURE__*/_jsxDEV(Song, {\n            song: song,\n            handleClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 41\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Songs yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Playlists, \"/7UASZ0pXGZcrJioajU839hHwfM=\");\n\n_c = Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"sources":["/Users/marcupio/Desktop/seir/unit4/rails-mini-project/tunr-client/src/components/Playlists.js"],"names":["React","useEffect","useState","Song","Playlists","playlists","setPlaylists","makeAPICall","res","fetch","json","err","console","error","handleClick","map","playlist","title","songs","song"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMM,WAAW,GAAG,YAAY;AAC/B,UAAI;AACH,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;AACA,cAAMC,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAJ,QAAAA,YAAY,CAACI,IAAD,CAAZ;AACA,OAJD,CAIE,OAAOC,GAAP,EAAY;AACbC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA;AACD,KARD;;AASAJ,IAAAA,WAAW;AACR,GAXK,EAWH,EAXG,CAAT;;AAYG,QAAMO,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAGH,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACET,SAAS,GACTA,SAAS,CAACU,GAAV,CAAc,UAAUC,QAAV,EAAoB;AACjC,0BACC;AAAA,gCACC;AAAA,oBAAKA,QAAQ,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,gBADD,EAEED,QAAQ,CAACE,KAAT,GACAF,QAAQ,CAACE,KAAT,CAAeH,GAAf,CAAmB,UAAUI,IAAV,EAAgB;AAClC,8BAC+B,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,IAAZ;AAAkB,YAAA,WAAW,EAAEL;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAD/B;AAGA,SAJD,CADA,gBAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,sBADD;AAcA,KAfD,CADS,gBAkBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBF;AAAA;AAAA;AAAA;AAAA,UADD;AAwBA,CAzCM;;GAAMV,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song'\n\nexport const Playlists = () => {\n\tconst [playlists, setPlaylists] = useState([]);\n\tuseEffect(() => {\n\t\tconst makeAPICall = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await fetch('http://localhost:3000/playlists');\n\t\t\t\tconst json = await res.json();\n\t\t\t\tsetPlaylists(json);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t};\n\t\tmakeAPICall();\n    }, []);\n    const handleClick = () => {\n        \n    }\n\treturn (\n\t\t<div className='playlists'>\n\t\t\t{playlists ? (\n\t\t\t\tplaylists.map(function (playlist) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h2>{playlist.title}</h2>\n\t\t\t\t\t\t\t{playlist.songs ? (\n\t\t\t\t\t\t\t\tplaylist.songs.map(function (song) {\n\t\t\t\t\t\t\t\t\treturn (\n                                        <Song song={song} handleClick={handleClick} />\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<p>No Songs yet</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t) : (\n\t\t\t\t<p>No Playlists</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}